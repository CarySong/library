apiVersion: v1
kind: Service
metadata:
  name: mongoheadless
spec:
  clusterIP: None
  selector:
    app: mongo
  ports:
  - name: http
    port: 80
---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongo
  replicas: 2
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:latest
        ports:
        - name: mongo
          containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      resources:
        requests:
          storage: 1Mi
      accessModes:
      - ReadWriteOnce    
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo
    tier: mongo
  type: NodePort

---


apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: locallibrary
  labels:
    app: locallibrary
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: locallibrary
        tier: locallibrary
    spec:
      containers:
      - image: 127.0.0.1:30400/locallibrary:$BUILD_TAG
        name: locallibrary
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: locallibrary

---
apiVersion: v1
kind: Service
metadata:
  name: locallibrary
  labels:
    app: locallibrary
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: locallibrary
    tier: locallibrary
  type: NodePort

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
 name: locallibrary
spec:
  backend:
    serviceName: locallibrary
    servicePort: 3000
  rules:
  - host: locallibrary.192.168.99.102.xip.io
    http:
      paths:
      - path: /
        backend:
          serviceName: locallibrary
          servicePort: 3000
---